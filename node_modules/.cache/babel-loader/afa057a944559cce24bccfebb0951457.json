{"ast":null,"code":"var _jsxFileName = \"/Users/max/Desktop/Project/comfy-zvit/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport itPlanData from '../data/ItPlanData';\nimport hsPlanData from '../data/HsPlanData';\nimport getCurrentDay from '../utils/Utils';\nimport CoefficientInput from './CoefficientInput';\nimport SalariesDisplay from './SalariesDisplay';\nimport InputField from './InputField';\nimport DevicesInput from './DevicesInput';\nimport Header from './Header';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [itSum, setItSum] = useState('');\n  const [itShare, setItShare] = useState('');\n  const [happySum, setHappySum] = useState('');\n  const [happyShare, setHappyShare] = useState('');\n  const [smartphones, setSmartphones] = useState('');\n  const [laptops, setLaptops] = useState('');\n  const [tvs, setTvs] = useState('');\n  const [itSalaries, setItSalaries] = useState(Array(4).fill(0));\n  const [coefficient, setCoefficient] = useState(() => {\n    return parseFloat(localStorage.getItem('coefficient')) || 6.2;\n  });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [monthlyPlans, setMonthlyPlans] = useState(() => {\n    const storedPlans = localStorage.getItem('monthlyPlans');\n    return storedPlans ? JSON.parse(storedPlans) : Array(31).fill({\n      it: 0,\n      happy: 0\n    });\n  });\n  useEffect(() => {\n    console.log(monthlyPlans); // Додайте цей рядок\n\n    localStorage.setItem('monthlyPlans', JSON.stringify(monthlyPlans));\n  }, [monthlyPlans]);\n  useEffect(() => {\n    const itSumValue = parseFloat(itSum);\n\n    if (!isNaN(itSumValue)) {\n      const itSalariesCalculation = Array(4).fill(0).map((_, index) => {\n        return itSumValue * (coefficient / 100) / (index + 1);\n      });\n      setItSalaries(itSalariesCalculation);\n    }\n  }, [itSum, coefficient]);\n  useEffect(() => {\n    localStorage.setItem('coefficient', coefficient.toString());\n  }, [coefficient]);\n\n  const handleCoefficientChange = e => {\n    setCoefficient(parseFloat(e.target.value) || 0);\n  };\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const handlePlanSubmit = () => {\n    // Додайте логіку для збереження планів в ваші файли\n    const updatedPlans = monthlyPlans.map((dayPlan, index) => {\n      return { ...dayPlan,\n        it: parseInt(dayPlan.it, 10) || 0,\n        happy: parseInt(dayPlan.happy, 10) || 0\n      };\n    });\n    setMonthlyPlans(updatedPlans);\n    closeModal();\n  };\n\n  const generateMessage = () => {\n    var _itPlanData, _hsPlanData;\n\n    const currentDay = getCurrentDay();\n    const itFact = parseInt(itSum, 10);\n    const itPlan = ((_itPlanData = itPlanData[currentDay - 1]) === null || _itPlanData === void 0 ? void 0 : _itPlanData.plan) || 0;\n    const itDeviation = (itFact - itPlan) / itPlan * 100;\n    const happyFact = parseInt(happySum, 10);\n    const happyPlan = ((_hsPlanData = hsPlanData[currentDay - 1]) === null || _hsPlanData === void 0 ? void 0 : _hsPlanData.plan) || 0;\n    const happyDeviation = (happyFact - happyPlan) / happyPlan * 100;\n    const smartphonesCount = parseInt(smartphones, 10);\n    const laptopsCount = parseInt(laptops, 10);\n    const tvsCount = parseInt(tvs, 10);\n    const isAnyDeviceSpecified = smartphonesCount || laptopsCount || tvsCount;\n    let devicesMessage = '';\n\n    if (isAnyDeviceSpecified) {\n      devicesMessage = `\n    Смарт ${smartphonesCount || '0'}\n    Ноут ${laptopsCount || '0'}\n    ТВ ${tvsCount || '0'}`;\n    }\n\n    return `Житомир\n    ІТ ${itPlan}/${itFact} (${itDeviation.toFixed(1)}%)\n    Часта: ${itShare}%\n    ХС ${happyPlan}/${happyFact} (${happyDeviation.toFixed(1)}%)\n    Частка: ${happyShare}%${devicesMessage}`;\n  };\n\n  const handleSubmit = () => {\n    const message = generateMessage();\n    alert(message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: openModal,\n        children: \"\\u0412\\u0432\\u0435\\u0441\\u0442\\u0438 \\u043F\\u043B\\u0430\\u043D\\u0438 \\u043D\\u0430 \\u043C\\u0456\\u0441\\u044F\\u0446\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoefficientInput, {\n      coefficient: coefficient,\n      onCoefficientChange: handleCoefficientChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: \"\\u0417\\u0430\\u0440\\u043E\\u0431\\u0456\\u0442\\u043D\\u0430 \\u043F\\u043B\\u0430\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SalariesDisplay, {\n      itSalaries: itSalaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      ariaHideApp: false,\n      children: [monthlyPlans.map((dayPlan, index) => {\n        const dayPlanIt = dayPlan.it || '';\n        const dayPlanHappy = dayPlan.happy || '';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: `День ${index + 1}: План по ІТ`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: dayPlanIt,\n            onChange: e => {\n              const newMonthlyPlans = [...monthlyPlans];\n              newMonthlyPlans[index] = { ...newMonthlyPlans[index],\n                it: e.target.value\n              };\n              setMonthlyPlans(newMonthlyPlans);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: `День ${index + 1}: План по Хепі`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: dayPlanHappy,\n            onChange: e => {\n              const newMonthlyPlans = [...monthlyPlans];\n              newMonthlyPlans[index] = { ...newMonthlyPlans[index],\n                happy: e.target.value\n              };\n              setMonthlyPlans(newMonthlyPlans);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlanSubmit,\n        children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438 \\u0442\\u0430 \\u0437\\u0430\\u043A\\u0440\\u0438\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      type: \"tel\",\n      placeholder: \" \",\n      value: itSum,\n      onChange: e => setItSum(e.target.value),\n      label: \"\\u0421\\u0443\\u043C\\u0430 \\u0437\\u0430 \\u0406\\u0422\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      type: \"text\",\n      placeholder: \" \",\n      value: itShare,\n      onChange: e => setItShare(e.target.value),\n      label: \"\\u0414\\u043E\\u043B\\u044F \\u0437\\u0430 \\u0406\\u0422 (%)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      type: \"tel\",\n      placeholder: \" \",\n      value: happySum,\n      onChange: e => setHappySum(e.target.value),\n      label: \"\\u0421\\u0443\\u043C\\u0430 \\u0437\\u0430 \\u0425\\u0435\\u043F\\u043F\\u0456\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      type: \"text\",\n      placeholder: \" \",\n      value: happyShare,\n      onChange: e => setHappyShare(e.target.value),\n      label: \"\\u0414\\u043E\\u043B\\u044F \\u0437\\u0430 \\u0425\\u0435\\u043F\\u043F\\u0456 (%)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DevicesInput, {\n      value: smartphones,\n      onChange: e => setSmartphones(e.target.value),\n      label: \"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u0441\\u043C\\u0430\\u0440\\u0442\\u0444\\u043E\\u043D\\u0456\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DevicesInput, {\n      value: laptops,\n      onChange: e => setLaptops(e.target.value),\n      label: \"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u043D\\u043E\\u0443\\u0442\\u0431\\u0443\\u043A\\u0456\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DevicesInput, {\n      value: tvs,\n      onChange: e => setTvs(e.target.value),\n      label: \"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u0422\\u0435\\u043B\\u0435\\u0432\\u0456\\u0437\\u043E\\u0440\\u0456\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleSubmit,\n      children: \"\\u0412\\u0456\\u0434\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iN+OcmOQONVX93tiS7CF3RBuyCw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/max/Desktop/Project/comfy-zvit/src/components/App.jsx"],"names":["React","useState","useEffect","ReactModal","itPlanData","hsPlanData","getCurrentDay","CoefficientInput","SalariesDisplay","InputField","DevicesInput","Header","App","itSum","setItSum","itShare","setItShare","happySum","setHappySum","happyShare","setHappyShare","smartphones","setSmartphones","laptops","setLaptops","tvs","setTvs","itSalaries","setItSalaries","Array","fill","coefficient","setCoefficient","parseFloat","localStorage","getItem","modalIsOpen","setModalIsOpen","monthlyPlans","setMonthlyPlans","storedPlans","JSON","parse","it","happy","console","log","setItem","stringify","itSumValue","isNaN","itSalariesCalculation","map","_","index","toString","handleCoefficientChange","e","target","value","openModal","closeModal","handlePlanSubmit","updatedPlans","dayPlan","parseInt","generateMessage","currentDay","itFact","itPlan","plan","itDeviation","happyFact","happyPlan","happyDeviation","smartphonesCount","laptopsCount","tvsCount","isAnyDeviceSpecified","devicesMessage","toFixed","handleSubmit","message","alert","dayPlanIt","dayPlanHappy","newMonthlyPlans"],"mappings":"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","sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport itPlanData from '../data/ItPlanData';\nimport hsPlanData from '../data/HsPlanData';\nimport getCurrentDay from '../utils/Utils';\nimport CoefficientInput from './CoefficientInput';\nimport SalariesDisplay from './SalariesDisplay';\nimport InputField from './InputField';\nimport DevicesInput from './DevicesInput';\nimport Header from './Header';\n\nimport './App.css';\n\nconst App = () => {\n  const [itSum, setItSum] = useState('');\n  const [itShare, setItShare] = useState('');\n  const [happySum, setHappySum] = useState('');\n  const [happyShare, setHappyShare] = useState('');\n  const [smartphones, setSmartphones] = useState('');\n  const [laptops, setLaptops] = useState('');\n  const [tvs, setTvs] = useState('');\n  const [itSalaries, setItSalaries] = useState(Array(4).fill(0));\n  const [coefficient, setCoefficient] = useState(() => {\n    return parseFloat(localStorage.getItem('coefficient')) || 6.2;\n  });\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [monthlyPlans, setMonthlyPlans] = useState(() => {\n    const storedPlans = localStorage.getItem('monthlyPlans');\n    return storedPlans\n      ? JSON.parse(storedPlans)\n      : Array(31).fill({ it: 0, happy: 0 });\n  });\n  useEffect(() => {\n    console.log(monthlyPlans); // Додайте цей рядок\n    localStorage.setItem('monthlyPlans', JSON.stringify(monthlyPlans));\n  }, [monthlyPlans]);\n\n  useEffect(() => {\n    const itSumValue = parseFloat(itSum);\n    if (!isNaN(itSumValue)) {\n      const itSalariesCalculation = Array(4)\n        .fill(0)\n        .map((_, index) => {\n          return (itSumValue * (coefficient / 100)) / (index + 1);\n        });\n      setItSalaries(itSalariesCalculation);\n    }\n  }, [itSum, coefficient]);\n\n  useEffect(() => {\n    localStorage.setItem('coefficient', coefficient.toString());\n  }, [coefficient]);\n\n  const handleCoefficientChange = e => {\n    setCoefficient(parseFloat(e.target.value) || 0);\n  };\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const handlePlanSubmit = () => {\n    // Додайте логіку для збереження планів в ваші файли\n    const updatedPlans = monthlyPlans.map((dayPlan, index) => {\n      return {\n        ...dayPlan,\n        it: parseInt(dayPlan.it, 10) || 0,\n        happy: parseInt(dayPlan.happy, 10) || 0,\n      };\n    });\n\n    setMonthlyPlans(updatedPlans);\n    closeModal();\n  };\n\n  const generateMessage = () => {\n    const currentDay = getCurrentDay();\n    const itFact = parseInt(itSum, 10);\n    const itPlan = itPlanData[currentDay - 1]?.plan || 0;\n    const itDeviation = ((itFact - itPlan) / itPlan) * 100;\n    const happyFact = parseInt(happySum, 10);\n    const happyPlan = hsPlanData[currentDay - 1]?.plan || 0;\n    const happyDeviation = ((happyFact - happyPlan) / happyPlan) * 100;\n    const smartphonesCount = parseInt(smartphones, 10);\n    const laptopsCount = parseInt(laptops, 10);\n    const tvsCount = parseInt(tvs, 10);\n    const isAnyDeviceSpecified = smartphonesCount || laptopsCount || tvsCount;\n    let devicesMessage = '';\n    if (isAnyDeviceSpecified) {\n      devicesMessage = `\n    Смарт ${smartphonesCount || '0'}\n    Ноут ${laptopsCount || '0'}\n    ТВ ${tvsCount || '0'}`;\n    }\n    return `Житомир\n    ІТ ${itPlan}/${itFact} (${itDeviation.toFixed(1)}%)\n    Часта: ${itShare}%\n    ХС ${happyPlan}/${happyFact} (${happyDeviation.toFixed(1)}%)\n    Частка: ${happyShare}%${devicesMessage}`;\n  };\n\n  const handleSubmit = () => {\n    const message = generateMessage();\n    alert(message);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"header-container\">\n        <Header />\n        {/* Кнопка для відкриття модального вікна */}\n        <button className=\"button\" onClick={openModal}>\n          Ввести плани на місяць\n        </button>\n        {/* Додайте інші компоненти тут */}\n      </div>\n\n      {/* Введення коефіцієнта */}\n      <CoefficientInput\n        coefficient={coefficient}\n        onCoefficientChange={handleCoefficientChange}\n      />\n      <div className=\"logo\">Заробітна плата</div>\n      {/* Відображення зарплат */}\n      <SalariesDisplay itSalaries={itSalaries} />\n\n      {/* Модальне вікно для введення планів */}\n      <ReactModal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n      >\n        {monthlyPlans.map((dayPlan, index) => {\n          const dayPlanIt = dayPlan.it || '';\n          const dayPlanHappy = dayPlan.happy || '';\n          return (\n            <div key={index}>\n              <label>{`День ${index + 1}: План по ІТ`}</label>\n              <input\n                type=\"text\"\n                value={dayPlanIt}\n                onChange={e => {\n                  const newMonthlyPlans = [...monthlyPlans];\n                  newMonthlyPlans[index] = {\n                    ...newMonthlyPlans[index],\n                    it: e.target.value,\n                  };\n                  setMonthlyPlans(newMonthlyPlans);\n                }}\n              />\n\n              <label>{`День ${index + 1}: План по Хепі`}</label>\n              <input\n                type=\"text\"\n                value={dayPlanHappy}\n                onChange={e => {\n                  const newMonthlyPlans = [...monthlyPlans];\n                  newMonthlyPlans[index] = {\n                    ...newMonthlyPlans[index],\n                    happy: e.target.value,\n                  };\n                  setMonthlyPlans(newMonthlyPlans);\n                }}\n              />\n            </div>\n          );\n        })}\n\n        {/* Кнопка для збереження планів і закриття модального вікна */}\n        <button onClick={handlePlanSubmit}>Зберегти та закрити</button>\n      </ReactModal>\n\n      {/* Введення сум за ІТ та Хеппі */}\n      <InputField\n        type=\"tel\"\n        placeholder=\" \"\n        value={itSum}\n        onChange={e => setItSum(e.target.value)}\n        label=\"Сума за ІТ\"\n      />\n      <InputField\n        type=\"text\"\n        placeholder=\" \"\n        value={itShare}\n        onChange={e => setItShare(e.target.value)}\n        label=\"Доля за ІТ (%)\"\n      />\n      <InputField\n        type=\"tel\"\n        placeholder=\" \"\n        value={happySum}\n        onChange={e => setHappySum(e.target.value)}\n        label=\"Сума за Хеппі\"\n      />\n      <InputField\n        type=\"text\"\n        placeholder=\" \"\n        value={happyShare}\n        onChange={e => setHappyShare(e.target.value)}\n        label=\"Доля за Хеппі (%)\"\n      />\n\n      {/* Введення кількості пристроїв */}\n      <DevicesInput\n        value={smartphones}\n        onChange={e => setSmartphones(e.target.value)}\n        label=\"Кількість смартфонів\"\n      />\n      <DevicesInput\n        value={laptops}\n        onChange={e => setLaptops(e.target.value)}\n        label=\"Кількість ноутбуків\"\n      />\n      <DevicesInput\n        value={tvs}\n        onChange={e => setTvs(e.target.value)}\n        label=\"Кількість Телевізорів\"\n      />\n\n      {/* Кнопка відправлення */}\n      <button className=\"button\" onClick={handleSubmit}>\n        Відправити\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}